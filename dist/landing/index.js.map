{
  "version": 3,
  "sources": ["../../static/common/global.js", "../../static/landing/index.js"],
  "sourcesContent": ["// export const host = 'http://localhost:3000';\nexport const host = 'https://bro-cloud.herokuapp.com';\n\nexport const FormState = class FormState {\n  constructor (customFn = null) {\n    this.state = {};\n    this.customFn = customFn\n  }\n\n  updateState(key, value) {\n    this.state[key] = value;\n  }\n\n  eventListener(event) {\n    const key = event.target.name;\n    const value = event.target.value;\n    const innerText = event.target.innerText;\n    this.updateState.apply(this, [key, value])\n    if (this.customFn) {\n      this.customFn({key, value, innerText}, this.state)\n    }\n  }\n\n  init(form, extraListeners) {\n    const elements = form.children;\n    for (let element of elements) {\n      if (\n        element.nodeName === 'INPUT' \n        || element.nodeName === 'SELECT'\n      ) {\n        element.addEventListener('input', this.eventListener.bind(this))\n      }\n    };\n\n    if (extraListeners) {\n      const {\n        identifier,\n        childElementType,\n        eventType\n      } = extraListeners\n\n      const parent = document.querySelector(identifier);\n      const children = parent.getElementsByTagName(childElementType)\n    \n      for (let child of children) {\n        child.addEventListener(eventType, this.eventListener.bind(this))\n      }\n    }\n  }\n\n  formData() {\n    return this.state;\n  }\n}\n\nexport const updateError = (error) => {\n    const errorNotif = document.querySelector('.error');\n    const errorMessage = document.createTextNode(error);\n    errorNotif.appendChild(errorMessage)\n\n    setTimeout(() => {\n      errorNotif.innerText = ''\n    }, 20000)\n  };\n", "import { host } from '../common/global.js'\n\nwindow.onload = checkForUser\n\nfunction checkForUser() {\n  const user = JSON.parse(localStorage.getItem('user'));\n  if (!user) {\n    return window.location.replace(`${host}/signup`)\n  }\n\n  window.location.replace(`${host}/music/${user.clubId}/${user._id}`);\n}"],
  "mappings": "MACO,GAAM,GAAO,kCCCpB,OAAO,OAAS,EAEhB,YAAwB,CACtB,GAAM,GAAO,KAAK,MAAM,aAAa,QAAQ,SAC7C,GAAI,CAAC,EACH,MAAO,QAAO,SAAS,QAAQ,GAAG,YAGpC,OAAO,SAAS,QAAQ,GAAG,WAAc,EAAK,UAAU,EAAK",
  "names": []
}
