{
  "version": 3,
  "sources": ["../../static/common/global.js", "../../static/common/api.js", "../../static/main/index.js"],
  "sourcesContent": ["export const host = 'http://localhost:3000'\n\nexport const FormState = class FormState {\n  constructor () {\n    this.state = {}\n  }\n\n  updateState(event) {\n    const key = event.target.name;\n    const value = event.target.value;\n    this.state[key] = value;\n  }\n\n  init(form) {\n    const elements = form.children;\n    for (let element of elements) {\n      if (\n        element.nodeName === 'INPUT' \n        || element.nodeName === 'SELECT'\n      ) {\n        element.addEventListener('input', this.updateState.bind(this))\n      }\n    };\n  }\n\n  formData() {\n    return this.state;\n  }\n}\n\nexport const errorState = {\n  error: null,\n  updateError(error) {\n    this.error = error\n  },\n  getError() {\n    return this.error\n  }\n};\n", "import { host, errorState } from './global.js';\n\nconst request = async (url, options) => {\n    const res = await fetch(host + url, options)\n    if (res.status >= 200 && res.status <= 299) {\n      const data = await res.json()\n      return Promise.resolve(data)\n    }\n\n  errorState.updateError(res.error)\n}\n\nconst user = JSON.parse(localStorage.getItem('user'))\n\nif (!user) {\n  errorState.updateError('Please login')\n}\n\nconst { clubId, _id } = user\nconst options = {\n  headers: {\n    'Content-Type': 'application/json',\n    'Authorization': `${_id} ${clubId}`\n  },\n  method: 'POST',\n}\n\nexport default {\n  signup: async body => {\n    options.body = JSON.stringify(body);\n    const data = await request('/signup', options);\n    return Promise.resolve(data)\n  },\n  search: async body => {\n    options.body = JSON.stringify(body);\n    const data = await request('/search', options);\n    return Promise.resolve(data)\n  },\n  addVideo: async body => {\n    options.body = JSON.stringify(body);\n    const data = await request('/addVideo', options);\n    return Promise.resolve(data)\n  },\n};", "import { FormState, errorState, host } from '../common/global.js';\nimport api from '../common/api';\nconst formState = new FormState()\n\nlet player;\nlet mainSocket\nlet clubSocket\nconst user = JSON.parse(localStorage.getItem('user'));\n\nwindow.onload = () => {\n  const form = document.querySelector('.main--search');\n  formState.init(form);\n  form.addEventListener('submit', formSubmit);\n  addHistoryListeners()\n  \n  mainSocket = io(host)\n  mainSocket.on('connect', () => {\n    console.log('Socket connected')\n    mainSocket.emit('setUpNs', user.clubId)\n  })\n\n  clubSocket = io(`/${user.clubId}`)\n  clubSocket.on('connect', () => {\n    console.log('Club NS socket connected')\n    emitClubInfo()\n    onClubInfo()\n  })\n};\n\nfunction emitClubInfo () {\n  clubSocket.emit('setUpClub', user._id)\n}\n\nfunction onClubInfo () {\n  clubSocket.on('updatePlaylist', updatePlaylist);\n  clubSocket.on('updateClubState', updateClubState)\n}\n\nfunction updateClubState (club) {\n  const userId = user._id;\n    const clubId = user.clubId; \n    const videoId = document.querySelector('#videoId')\n   \n    if (!videoId) {\n      clubSocket.emit('playNext', clubId);\n      return\n    }\n\n    onYouTubeIframeAPIReady(videoId.value, club.ellapsedSeconds);\n    updateMembers(club.members);\n\n    if (userId === club.members[0]) {\n      setInterval(() => {\n        const data = {\n          seconds: player.getCurrentTime(),\n          clubId\n        }\n\n        clubSocket.emit('updateSeconds', data);\n      }, 1000)\n    }\n}\n\nfunction addHistoryListeners () {\n  const ul = document.querySelector('.main--history-list');\n  const children = ul.getElementsByTagName('li');\n\n  for (let li of children) {\n    const videoId = li.getAttribute('id')\n    const button = li.getElementsByTagName('button')[0];\n    const name = button.getElementsByTagName('p')[0].innerText\n    addVideoListener(button, null,  name, videoId)\n  }\n}\n\nfunction updateMembers (members) {\n  const ul = document.querySelector('.main--squad-list');\n  const children = ul.getElementsByTagName('li')\n\n  members.forEach(memberId => {\n    for (let member of children ) {\n      if (member.id.toString() === memberId.toString()) {\n        const memberChildren = member.getElementsByTagName('span')\n        memberChildren[1].className = 'u--green-circle';\n      }\n    }\n  });\n}\n\nfunction onYouTubeIframeAPIReady(videoId, ellapsedSeconds) {\n  player = new YT.Player('player', {\n    height: '300',\n    width: '500',\n    videoId: videoId,\n    playerVars: {\n      cc_load_policy: 0,\n      autoplay: 1,\n      controls: 0,\n      disablekb: 1,\n      enablejsapi: 1,\n      fs: 0,\n      modestbranding: 1,\n      start: ellapsedSeconds\n    },\n    events: {\n      onStateChange: onPlayerStateChange,\n      onError: onPlayerError\n    }\n  });\n}\n\nasync function formSubmit (event) {\n  event.preventDefault();\n  const query = formState.formData();\n  const data = await api.search(query);\n  const resultSection = document.querySelector('.main--search-results');\n  resultSection.innerText = \"\";\n  const resultsList = createResultList(data.results);\n  resultSection.appendChild(resultsList);\n}\n\nfunction addVideoListener (btn, ul, name, videoId) {\n  btn.addEventListener('click', async (event) => {\n    console.log(videoId, name)\n    /* if video is from search results, \n    clear searchresults */\n    if (ul) {\n      ul.innerText = \"\";\n    }\n\n    const body = {\n      name,\n      videoId\n    }\n\n    const data = await api.addVideo(body)\n    addToPlaylist(data);\n  })\n}\n\nfunction createResultList (data) {\n  const list = new DocumentFragment();\n  const ul = document.createElement('ul');\n  ul.className = 'main--result-list';\n\n  data.items.forEach(item => {\n    const li = document.createElement('li');\n    const button = document.createElement('button');\n    button.className = 'btn--result';\n    addVideoListener(button, ul, item.snippet.title, item.id.videoId);\n\n    const span = document.createElement('span');\n    const title = document.createTextNode(item.snippet.title);\n    span.appendChild(title)\n\n    const img = document.createElement('img');\n    img.setAttribute('src', item.snippet.thumbnails.default.url);\n    img.className = 'thumbnail';\n\n    button.appendChild(span);\n    button.appendChild(img);\n    li.appendChild(button)\n    ul.appendChild(li);\n  })\n\n  list.append(ul)\n  return list\n}\n\nfunction addToPlaylist (data) {\n  const { currentlyPlaying, newVideo } = data;\n  \n  if (!newVideo && currentlyPlaying.videoId) {\n    const currentVideo = document.querySelector('.main--playing');\n    const oldChild = currentVideo.getElementsByTagName('li')[0];\n    const currentVideoName = document.createTextNode(currentlyPlaying.name); \n    const currentUserName = document.createTextNode(currentlyPlaying.userFullName); \n    \n    const li = document.createElement('li');\n    const div = document.createElement('div');\n    const input = document.createElement('input');\n    input.setAttribute('value', currentlyPlaying.videoId);\n    input.setAttribute('id', 'videoId');\n    input.setAttribute('type', 'hidden');\n    \n    div.className=\"main--name-highlight\"\n    div.appendChild(currentUserName)\n    li.appendChild(currentVideoName);\n    li.appendChild(div)\n    li.appendChild(input)\n    currentVideo.replaceChild(li, oldChild);\n  }\n  \n  if (newVideo) {\n    const upNext = document.querySelector('.main--up-next');\n    const videoName = document.createTextNode(newVideo.name); \n    const userName = document.createTextNode(newVideo.userFullName); \n     \n    const li = document.createElement('li');\n    const div = document.createElement('div');\n    div.className=\"main--name-highlight\"\n    div.appendChild(userName)\n    li.appendChild(videoName);\n    li.appendChild(div)\n    upNext.appendChild(li);\n  }\n}\n\nfunction updatePlaylist (data) {\n  const { currentlyPlaying, playlist, seconds} = data;\n  const currentVideo = document.querySelector('.main--playing');\n  const oldChild = currentVideo.getElementsByTagName('li')[0];\n\n  const currentVideoName = document.createTextNode(currentlyPlaying.name); \n  const currentUserName = document.createTextNode(currentlyPlaying.userFullName); \n  \n  const li = document.createElement('li');\n  const div = document.createElement('div');\n  div.className=\"main--name-highlight\"\n  div.appendChild(currentUserName)\n  li.appendChild(currentVideoName);\n  li.appendChild(div)\n  currentVideo.replaceChild(li, oldChild);\n\n  player.loadVideoById(currentlyPlaying.videoId, seconds);\n  \n  const upNext = document.querySelector('.main--up-next');\n  upNext.innerText = \"\"\n  playlist.forEach(video => {\n    const videoName = document.createTextNode(video.name); \n    const userName = document.createTextNode(video.userFullName); \n      \n    const li = document.createElement('li');\n    const div = document.createElement('div');\n    div.className=\"main--name-highlight\"\n    div.appendChild(userName)\n    li.appendChild(videoName);\n    li.appendChild(div)\n    upNext.appendChild(li);\n  })\n}\n\nasync function onPlayerStateChange(event) {\n  const upNext = document.querySelector('.main--up-next');\n  const videoCount = upNext.getElementsByTagName('li').length\n  if(event.data === YT.PlayerState.ENDED && videoCount > 0) {\n    clubSocket.emit('playNext', user.clubId);\n  }\n}\n\nfunction onPlayerError(event) {\n  errorState.updateError(`Error loading video. code ${event.data}`)\n  clubSocket.emit('playNext', user.clubId);\n}\n\n"],
  "mappings": "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",
  "names": []
}
