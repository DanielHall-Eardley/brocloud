{
  "version": 3,
  "sources": ["../../static/common/global.js", "../../static/common/api.js", "../../static/signup/index.js"],
  "sourcesContent": ["export const host = 'http://localhost:3000'\n\nexport const FormState = class FormState {\n  constructor () {\n    this.state = {}\n  }\n\n  updateState(event) {\n    const key = event.target.name;\n    const value = event.target.value;\n    this.state[key] = value;\n  }\n\n  init(form) {\n    const elements = form.children;\n    for (let element of elements) {\n      if (\n        element.nodeName === 'INPUT' \n        || element.nodeName === 'SELECT'\n      ) {\n        element.addEventListener('input', this.updateState.bind(this))\n      }\n    };\n  }\n\n  formData() {\n    return this.state;\n  }\n}\n\nexport const errorState = {\n  error: null,\n  updateError(error) {\n    this.error = error\n  },\n  getError() {\n    return this.error\n  }\n}", "import { host, errorState } from './global.js';\n\nconst request = async (url, options) => {\n    const res = await fetch(host + url, options)\n    if (res.status >= 200 && res.status <= 299) {\n      const data = await res.json()\n      return Promise.resolve(data)\n    }\n\n  errorState.updateError(res.error)\n}\n\nconst options = {\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  method: 'POST',\n}\n\nexport default {\n  signup: async body => {\n    options.body = JSON.stringify(body);\n    const data = await request('/signup', options);\n    return Promise.resolve(data)\n  }\n};", "import { FormState, host } from '../common/global.js';\nimport api from '../common/api';\nconst formState = new FormState()\n\nwindow.onload = () => {\n  const form = document.querySelector('.signup--form');\n  formState.init(form);\n  form.addEventListener('submit', formSubmit);\n};\n\nasync function formSubmit (event) {\n  event.preventDefault();\n  const body = formState.formData();\n  const data = await api.signup(body);\n  localStorage.setItem('user', JSON.stringify(data.user));\n  window.location.replace(`${host}/music/${data.user._id}`);\n}"],
  "mappings": ";;AAAO,MAAM,OAAO;AAEb,MAAM,YAAY,iBAAgB;AAAA,IACvC,cAAe;AACb,WAAK,QAAQ;AAAA;AAAA,IAGf,YAAY,OAAO;AACjB,YAAM,MAAM,MAAM,OAAO;AACzB,YAAM,QAAQ,MAAM,OAAO;AAC3B,WAAK,MAAM,OAAO;AAAA;AAAA,IAGpB,KAAK,MAAM;AACT,YAAM,WAAW,KAAK;AACtB,eAAS,WAAW,UAAU;AAC5B,YACE,QAAQ,aAAa,WAClB,QAAQ,aAAa,UACxB;AACA,kBAAQ,iBAAiB,SAAS,KAAK,YAAY,KAAK;AAAA;AAAA;AAE3D;AAAA;AAAA,IAGH,WAAW;AACT,aAAO,KAAK;AAAA;AAAA;AAIT,MAAM,aAAa;AAAA,IACxB,OAAO;AAAA,IACP,YAAY,OAAO;AACjB,WAAK,QAAQ;AAAA;AAAA,IAEf,WAAW;AACT,aAAO,KAAK;AAAA;AAAA;;;AClChB,MAAM,UAAU,OAAO,KAAK,aAAY;AACpC,UAAM,MAAM,MAAM,MAAM,OAAO,KAAK;AACpC,QAAI,IAAI,UAAU,OAAO,IAAI,UAAU,KAAK;AAC1C,YAAM,OAAO,MAAM,IAAI;AACvB,aAAO,QAAQ,QAAQ;AAAA;AAG3B,eAAW,YAAY,IAAI;AAAA;AAG7B,MAAM,UAAU;AAAA,IACd,SAAS;AAAA,MACP,gBAAgB;AAAA;AAAA,IAElB,QAAQ;AAAA;AAGV,MAAO,cAAQ;AAAA,IACb,QAAQ,OAAM,SAAQ;AACpB,cAAQ,OAAO,KAAK,UAAU;AAC9B,YAAM,OAAO,MAAM,QAAQ,WAAW;AACtC,aAAO,QAAQ,QAAQ;AAAA;AAAA;;;ACrB3B,MAAM,YAAY,IAAI;AAEtB,SAAO,SAAS,MAAM;AACpB,UAAM,OAAO,SAAS,cAAc;AACpC,cAAU,KAAK;AACf,SAAK,iBAAiB,UAAU;AAAA;AAGlC,4BAA2B,OAAO;AAChC,UAAM;AACN,UAAM,OAAO,UAAU;AACvB,UAAM,OAAO,MAAM,YAAI,OAAO;AAC9B,iBAAa,QAAQ,QAAQ,KAAK,UAAU,KAAK;AACjD,WAAO,SAAS,QAAQ,GAAG,cAAc,KAAK,KAAK;AAAA;",
  "names": []
}
